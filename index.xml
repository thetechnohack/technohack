<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Techno Hack</title>
    <link>https://thetechnohack.cf/</link>
    <description>Recent content on The Techno Hack</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 04 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://thetechnohack.cf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Import *.sql Files in MySQL &#43; Download Sample Tables &amp; Database</title>
      <link>https://thetechnohack.cf/post/how-to-import-.sql-in-mysql-sample-database-download/</link>
      <pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/how-to-import-.sql-in-mysql-sample-database-download/</guid>
      <description>
        
          &lt;p&gt;In this tutorial we will see how to import .sql (tables or databases) files in MySQL-CLI.&lt;/p&gt;
&lt;p&gt;MariaDB and MySQL have some differences and similarities although both are commonly known as MySQL. We will use MariaDB as our database management system throughout this tutorial.&lt;/p&gt;
&lt;p&gt;You can see below how the MySQL and MariaDB prompts look like :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL prompt:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;MariaDB prompt:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [(none)]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-is-a-sql-file-&#34;&gt;What is a .sql file ?&lt;/h2&gt;
&lt;p&gt;The *.sql extension is a file which contains some sql statements like — Create - Select - Insert - View etc. in a proper order to perform the creation of databases and tables. It is also known as &amp;quot;dump&amp;quot; because it is basically a mysql export.&lt;/p&gt;
&lt;h2 id=&#34;creating-database&#34;&gt;Creating Database&lt;/h2&gt;
&lt;p&gt;First of all, we have to create a database in which we can import sql tables.&lt;/p&gt;
&lt;p&gt;Let&#39;s create a database named &amp;quot;&lt;em&gt;test&lt;/em&gt;&amp;quot; using the CREATE DATABASE statement :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [(none)]&amp;gt; CREATE DATABASE test;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Select the &amp;quot;&lt;em&gt;test&lt;/em&gt;&amp;quot; database as the default database using USE statement :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [(none)]&amp;gt; USE test;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;importing-sql-sample-tables&#34;&gt;Importing *.sql Sample Tables&lt;/h2&gt;
&lt;p&gt;We have two sample tables here. We will import them in our &amp;quot;&lt;em&gt;test&lt;/em&gt;&amp;quot; database :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;event table&lt;/li&gt;
&lt;li&gt;pet table&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;event-table&#34;&gt;Event table&lt;/h3&gt;
&lt;p&gt;Download and extract the following zip file in your working directory : &lt;a href=&#34;https://github.com/thetechnohack/files/raw/main/mysql%20samples/event-table.zip&#34; class=&#34;buttonDownload&#34;&gt;Download event-table.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see that there are two files in event-table folder :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;event-table
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;├── cr_event_tbl.sql
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;└── event.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But why do we need two separate files ??&lt;/p&gt;
&lt;p&gt;It is because the sql file here is only containing the table structure and the text file is holding the values for that table structure.
But it is not necessary to use two different files, we can also hold table structure and values together in a sql file.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;cr_event_tbl.sql&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This file contains the table structure or table format.&lt;/p&gt;
&lt;p&gt;Import this file using the SOURCE statement as shown below :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [test]&amp;gt; SOURCE cr_event_tbl.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will create an empty table &amp;quot;&lt;em&gt;event&lt;/em&gt;&amp;quot; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [test]&amp;gt; SHOW TABLES;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;+---------------------+
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;| Tables_in_test      |
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;+---------------------+
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;| event               |
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;+---------------------+
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;1 row in set (0.010 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;event.txt&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This file contains the data (values) for event table. We need to load this data in event table.&lt;/p&gt;
&lt;p&gt;Use the below statement to load the event.txt in event table :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [test]&amp;gt; LOAD DATA LOCAL INFILE &amp;#39;event.txt&amp;#39; INTO TABLE event;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have the complete table. You can see the complete table using the SELECT statement:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;MariaDB [test]&amp;gt; SELECT * FROM event;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;+----------+------------+----------+-----------------------------+
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;| name     | date       | type     | remark                      |
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;+----------+------------+----------+-----------------------------+
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;| Fluffy   | 1995-05-15 | litter   | 4 kittens, 3 female, 1 male |
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;| Buffy    | 1993-06-23 | litter   | 5 puppies, 2 female, 3 male |
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;| Buffy    | 1994-06-19 | litter   | 3 puppies, 3 female         |
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;| Chirpy   | 1999-03-21 | vet      | needed beak straightened    |
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;| Slim     | 1997-08-03 | vet      | broken rib                  |
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;| Bowser   | 1991-10-12 | kennel   | NULL                        |
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;| Fang     | 1991-10-12 | kennel   | NULL                        |
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;| Fang     | 1998-08-28 | birthday | Gave him a new chew toy     |
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;| Claws    | 1998-03-17 | birthday | Gave him a new flea collar  |
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;| Whistler | 1998-12-09 | birthday | First birthday              |
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;+----------+------------+----------+-----------------------------+
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;10 rows in set (0.012 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pet-table&#34;&gt;Pet table&lt;/h3&gt;
&lt;p&gt;Download and extract the following zip file in your working directory : &lt;a href=&#34;https://github.com/thetechnohack/files/raw/main/mysql%20samples/pet-table.zip&#34; class=&#34;buttonDownload&#34;&gt;Download pet-table.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow the same procedure as we done above.&lt;/p&gt;
&lt;p&gt;Folder structure of pet-table :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;pet-table
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;├── cr_pet_tbl.sql
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;└── pet.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;cr_pet_tbl.sql&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Importing &lt;em&gt;cr_pet_tbl.sql&lt;/em&gt; in &amp;quot;&lt;em&gt;test&lt;/em&gt;&amp;quot; database :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [test]&amp;gt; SOURCE cr_pet_tbl.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create a new empty table as name &amp;quot;&lt;em&gt;pet&lt;/em&gt;&amp;quot; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [test]&amp;gt; SHOW TABLES;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;+---------------------+
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;| Tables_in_test      |
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;+---------------------+
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;| event               |
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;| pet                 |
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;+---------------------+
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;2 rows in set (0.010 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;pet.txt&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Load data form pet.txt in pet table :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [test]&amp;gt; LOAD DATA LOCAL INFILE &amp;#39;pet.txt&amp;#39; INTO TABLE pet;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Print the entire table using SELECT statement :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;MariaDB [test]&amp;gt; SELECT * FROM pet;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;+----------+--------+---------+------+------------+------------+
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;| name     | owner  | species | sex  | birth      | death      |
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;+----------+--------+---------+------+------------+------------+
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;| Fluffy   | Harold | cat     | f    | 1993-02-04 | NULL       |
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;| Claws    | Gwen   | cat     | m    | 1994-03-17 | NULL       |
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;| Buffy    | Harold | dog     | f    | 1989-05-13 | NULL       |
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;| Fang     | Benny  | dog     | m    | 1990-08-27 | NULL       |
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;| Bowser   | Diane  | dog     | m    | 1979-08-31 | 1995-07-29 |
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;| Chirpy   | Gwen   | bird    | f    | 1998-09-11 | NULL       |
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;| Whistler | Gwen   | bird    | NULL | 1997-12-09 | NULL       |
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;| Slim     | Benny  | snake   | m    | 1996-04-29 | NULL       |
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;+----------+--------+---------+------+------------+------------+
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;8 rows in set (0.011 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;importing-sample-sql-database&#34;&gt;Importing Sample .sql database&lt;/h2&gt;
&lt;p&gt;Here, we have a .sql database dump, which means you don&#39;t need to create an empty table first and then import data into it. It will automatically create a database with some sample tables in it.&lt;/p&gt;
&lt;p&gt;Download and extract the following zip file in your working directory : &lt;a href=&#34;https://github.com/thetechnohack/files/raw/main/mysql%20samples/mydb.zip&#34; class=&#34;buttonDownload&#34;&gt;Download database&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now just use the SOURCE statement :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [(none)]&amp;gt; SOURCE mysqlsampledatabase.sql;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will create a database, &lt;strong&gt;classicmodels&lt;/strong&gt; with some tables in it.&lt;/p&gt;
&lt;p&gt;Select the &lt;strong&gt;classicmodels&lt;/strong&gt; as default database :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;MariaDB [(none)]&amp;gt; USE classicmodels;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are different tables for practicing MySQL statements :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;MariaDB [classicmodels]&amp;gt; SHOW TABLES;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;+-------------------------+
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;| Tables_in_classicmodels |
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;+-------------------------+
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;| customers               |
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;| employees               |
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;| offices                 |
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;| orderdetails            |
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;| orders                  |
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;| payments                |
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;| productlines            |
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;| products                |
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;+-------------------------+
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;8 rows in set (0.001 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hope you liked this tutorial.
Comment your suggestions and queries. &lt;strong&gt;We always appreciate your feedback 😊&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;style&gt;
.buttonDownload {
	display: inline-block;
	position: relative;
	padding: 10px 25px;
   background-color: #4CC713;
   color: white;
   font-family: sans-serif;
	text-decoration: none;
	font-size: 0.9em;
	text-align: center;
	text-indent: 15px;
   border-radius: 8px;
   outline: none;
}

.buttonDownload:hover {
	background-color: #333;
	color: white;
}

.buttonDownload:before, .buttonDownload:after {
	content: &#39; &#39;;
	display: block;
	position: absolute;
	left: 15px;
	top: 52%;
}

/* Download box shape  */
.buttonDownload:before {
	width: 10px;
	height: 2px;
	border-style: solid;
	border-width: 0 2px 2px;
}

/* Download arrow shape */
.buttonDownload:after {
	width: 0;
	height: 0;
	margin-left: 3px;
	margin-top: -7px;
  
	border-style: solid;
	border-width: 4px 4px 0 4px;
	border-color: transparent;
	border-top-color: inherit;
	
	animation: downloadArrow 2s linear infinite;
	animation-play-state: paused;
}

.buttonDownload:hover:before {
	border-color: #4CC713;
}

.buttonDownload:hover:after {
	border-top-color: #4CC713;
	animation-play-state: running;
}

/* keyframes for the download icon anim */
@keyframes downloadArrow {
	/* 0% and 0.001% keyframes used as a hackish way of having the button frozen on a nice looking frame by default */
	0% {
		margin-top: -7px;
		opacity: 1;
	}
	
	0.001% {
		margin-top: -15px;
		opacity: 0;
	}
	
	50% {
		opacity: 1;
	}
	
	100% {
		margin-top: 0;
		opacity: 0;
	}
}
&lt;/style&gt;

        
      </description>
    </item>
    
    <item>
      <title>How to Install MySQL Server and Client on Android</title>
      <link>https://thetechnohack.cf/post/how-to-install-mysql-server-and-client-on-android/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/how-to-install-mysql-server-and-client-on-android/</guid>
      <description>
        
          &lt;p&gt;If you are still stucked in installation of MySQL (MariaDB) on your android — don&#39;t worry we have a quick and best solution for that.&lt;/p&gt;
&lt;p&gt;We have already done a tutorial on this topic : &lt;a href=&#34;https://thetechnohack.cf/post/how-to-install-mysql-on-android-with-termux/&#34;&gt;How to Install MySQL (MariaDB) on Android With Termux&lt;/a&gt; &lt;br&gt;
But this tutorial on how to install mysql is going to be far more easy and straightforward than our old tutorial.&lt;/p&gt;
&lt;p&gt;We made a simple tool (bash scripting) to solve this problem, which automates all the processes and you only need to use some easy instructions commands.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE :&lt;/strong&gt; This only works for android devices as termux is only available for android.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install Termux App (&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.termux&#34;&gt;Click Here&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open Termux Application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy &amp;amp; Paste The Below Command :&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;apt update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt upgrade&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; pkg install wget&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; wget -O mysql.tar.gz &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://github.com/sumit-buddy/mysql-for-termux-android/archive/v1.0.tar.gz&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; tar -xzf mysql.tar.gz -C home --strip-components &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm mysql.tar.gz &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; home &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -r images &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm README.md&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; chmod u+x installer.sh&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; ./installer.sh&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/../usr/etc/bash.bashrc&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; rm installer.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;Now the installation will begin. &lt;br&gt;
(&lt;strong&gt;Please be patient as this may take some time depending on your internet speed&lt;/strong&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will be asked to answer
&lt;ins&gt;&lt;code&gt;Do you want to continue? [Y/n]&lt;/code&gt;&lt;/ins&gt;
upto three times. Each time type in &#39;&lt;em&gt;y&lt;/em&gt;&#39; and press enter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After that, the following pop-up will appear. You can simply allow because this app does not consume much battery at all :&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sumit-buddy/mysql-for-termux-android/master/images/stop-optimizing-battery-usage.jpg#image&#34; alt=&#34;stop optimizing battery usage?&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;When the entire installation process is completed, a text saying &amp;quot;&lt;strong&gt;MySQL installed successfully&lt;/strong&gt;&amp;quot; should appear. &lt;br&gt;
Now, the MySQL server has started on your machine and you are all set to use MySQL.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;commands&#34;&gt;Commands&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ins&gt;start-server&lt;/ins&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;start-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run this command to start MySQL server. (&lt;strong&gt;First time during installation the server starts by default, so no need to run there&lt;/strong&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ins&gt;setpass&lt;/ins&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;setpass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use this command to set a password for the user. (&lt;strong&gt;This can only be done while the server is running.&lt;/strong&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ins&gt;start-client&lt;/ins&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;start-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run this command to start the MySQL client.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ins&gt;stop-server&lt;/ins&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;stop-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use this command to stop MySQL server (daemon). &lt;br&gt;
&lt;strong&gt;Must use this command to stop MySQL server after exiting mariadb, otherwise when you try to start the server again you will get the error : &lt;code&gt;Error 2002 (HY000)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;troubleshooting-errors&#34;&gt;Troubleshooting Errors&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;If you get any errors during or after installation, you can check the log file using the command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;cat logs.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;If you get the following error — use the command &lt;code&gt;stop-server&lt;/code&gt; and then restart using &lt;code&gt;start-server&lt;/code&gt; command :&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;Error &lt;span class=&#34;m&#34;&gt;2002&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;HY000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: Can&lt;span class=&#34;s1&#34;&gt;&amp;#39;t connect to local MySQL server through the socket &amp;#39;&lt;/span&gt;/data/data/com.termux/files/usr/tmp/mysqld.sock&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;111&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you&#39;re still finding it difficult or having some error, you can send a screenshot of your error and ask for help...&lt;/p&gt;
&lt;style&gt;
img[src$=&#34;#image&#34;] {
  border-radius: 10px;
}
&lt;/style&gt;
&lt;br&gt;

        
      </description>
    </item>
    
    <item>
      <title>Trojan Horse – What is it ?</title>
      <link>https://thetechnohack.cf/post/what-are-trojans/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/what-are-trojans/</guid>
      <description>
        
          &lt;h2 id=&#34;what-is-a-trojan-&#34;&gt;What is a Trojan ?&lt;/h2&gt;
&lt;p&gt;A Trojan horse, or Trojan, is a type of malicious code or software that looks legitimate but can take control of your computer. A Trojan is designed to damage, disrupt, steal, or in general inflict some other harmful action on your data or network.&lt;/p&gt;
&lt;p&gt;A Trojan acts like a bona fide application or file to trick you. It seeks to deceive you into loading and executing the malware on your device. Once installed, a Trojan can perform the action it was designed for.&lt;/p&gt;
&lt;p&gt;A Trojan is sometimes called a Trojan virus or a Trojan horse virus, but that’s a misnomer. Viruses can execute and replicate themselves. A Trojan cannot. A user has to execute Trojans. Even so, Trojan malware and Trojan virus are often used interchangeably.&lt;/p&gt;
&lt;p&gt;Whether you prefer calling it Trojan malware or a Trojan virus, it’s smart to know how this infiltrator works and what you can do to keep your devices safe.&lt;/p&gt;
&lt;h2 id=&#34;how-do-trojans-work&#34;&gt;How Do Trojans Work?&lt;/h2&gt;
&lt;p&gt;Here’s a Trojan malware example to show how it works.&lt;/p&gt;
&lt;p&gt;You might think you’ve received an email from someone you know and click on what looks like a legitimate attachment. But you’ve been fooled. The email is from a cybercriminal, and the file you clicked on — and downloaded and opened — has gone on to install malware on your device.&lt;/p&gt;
&lt;p&gt;When you execute the program, the malware can spread to other files and damage your computer.&lt;/p&gt;
&lt;p&gt;How? It varies. Trojans are designed to do different things. But you’ll probably wish they weren’t doing any of them on your device.&lt;/p&gt;
&lt;h2 id=&#34;common-types-of-trojan-malware-from-a-to-z&#34;&gt;Common Types Of Trojan Malware, From A to Z&lt;/h2&gt;
&lt;p&gt;Here’s a look at some of the most common types of Trojan malware, including their names and what they do on your computer:&lt;/p&gt;
&lt;h4 id=&#34;backdoor-trojan&#34;&gt;Backdoor Trojan&lt;/h4&gt;
&lt;p&gt;This Trojan can create a “backdoor” on your computer. It lets an attacker access your computer and control it. Your data can be downloaded by a third party and stolen. Or more malware can be uploaded to your device.&lt;/p&gt;
&lt;h4 id=&#34;distributed-denial-of-service-ddos-attack-trojan&#34;&gt;Distributed Denial of Service (DDoS) attack Trojan&lt;/h4&gt;
&lt;p&gt;This Trojan performs DDoS attacks. The idea is to take down a network by flooding it with traffic. That traffic comes from your infected computer and others.&lt;/p&gt;
&lt;h4 id=&#34;downloader-trojan&#34;&gt;Downloader Trojan&lt;/h4&gt;
&lt;p&gt;This Trojan targets your already-infected computer. It downloads and installs new versions of malicious programs. These can include Trojans and adware.&lt;/p&gt;
&lt;h4 id=&#34;fake-av-trojan&#34;&gt;Fake AV Trojan&lt;/h4&gt;
&lt;p&gt;This Trojan behaves like antivirus software, but demands money from you to detect and remove threats, whether they’re real or fake.&lt;/p&gt;
&lt;h4 id=&#34;game-thief-trojan&#34;&gt;Game-thief Trojan&lt;/h4&gt;
&lt;p&gt;The losers here may be online gamers. This Trojan seeks to steal their account information.&lt;/p&gt;
&lt;h4 id=&#34;infostealer-trojan&#34;&gt;Infostealer Trojan&lt;/h4&gt;
&lt;p&gt;As it sounds, this Trojan is after data on your infected computer.&lt;/p&gt;
&lt;h4 id=&#34;mailfinder-trojan&#34;&gt;Mailfinder Trojan&lt;/h4&gt;
&lt;p&gt;This Trojan seeks to steal the email addresses you’ve accumulated on your device.&lt;/p&gt;
&lt;h4 id=&#34;ransom-trojan&#34;&gt;Ransom Trojan&lt;/h4&gt;
&lt;p&gt;This Trojan seeks a ransom to undo damage it has done to your computer. This can include blocking your data or impairing your computer’s performance.&lt;/p&gt;
&lt;h4 id=&#34;remote-access-trojan&#34;&gt;Remote Access Trojan&lt;/h4&gt;
&lt;p&gt;This Trojan can give an attacker full control over your computer via a remote network connection. Its uses include stealing your information or spying on you.&lt;/p&gt;
&lt;h4 id=&#34;rootkit-trojan&#34;&gt;Rootkit Trojan&lt;/h4&gt;
&lt;p&gt;A rootkit aims to hide or obscure an object on your infected computer. The idea? To extend the time a malicious program runs on your device.&lt;/p&gt;
&lt;h4 id=&#34;sms-trojan&#34;&gt;SMS Trojan&lt;/h4&gt;
&lt;p&gt;This type of Trojan infects your mobile device and can send and intercept text messages. Texts to premium-rate numbers can drive up your phone costs.&lt;/p&gt;
&lt;h4 id=&#34;trojan-banker&#34;&gt;Trojan banker&lt;/h4&gt;
&lt;p&gt;This Trojan takes aim at your financial accounts. It’s designed to steal your account information for all the things you do online. That includes banking, credit card, and bill pay data.&lt;/p&gt;
&lt;h4 id=&#34;trojan-im&#34;&gt;Trojan IM&lt;/h4&gt;
&lt;p&gt;This Trojan targets instant messaging. It steals your logins and passwords on IM platforms.&lt;/p&gt;
&lt;p&gt;That’s just a sample. There are a lot more.&lt;/p&gt;
&lt;h2 id=&#34;examples-of-trojan&#34;&gt;Examples Of Trojan&lt;/h2&gt;
&lt;p&gt;Examples of Trojan malware attacks
Trojan malware attacks can inflict a lot of damage. At the same time, Trojans continue to evolve. Here are three examples.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ins&gt;&lt;strong&gt;Emotet banking Trojan&lt;/strong&gt;&lt;/ins&gt; :  After a long hiatus, Emotet’s activity increased in the last few months of 2017, according to the Symantec 2018 Internet Security Threat Report. Detections increased by 2,000 percent in that period. Emotet steals financial information, among other things.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ins&gt;&lt;strong&gt;Rakhni Trojan&lt;/strong&gt;&lt;/ins&gt;: This malware has been around since 2013. More recently, it can deliver ransomware or a cryptojacker (allowing criminals to use your device to mine for cryptocurrency) to infected computers. “The growth in coin mining in the final months of 2017 was immense,” the 2018 Internet Security Threat Report notes. “Overall coin-mining activity increased by 34,000 percent over the course of the year.”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ins&gt;&lt;strong&gt;ZeuS/Zbot&lt;/strong&gt;&lt;/ins&gt; : This banking Trojan is another oldie but baddie. ZeuS/Zbot source code was first released in 2011. It uses keystroke logging — recording your keystrokes as you log into your bank account, for instance — to steal your credentials and perhaps your account balance as well.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;how-trojans-impact-mobile-devices&#34;&gt;How Trojans Impact Mobile Devices?&lt;/h2&gt;
&lt;p&gt;Trojans aren’t problems for only laptop and desktop computers. They can also impact your mobile devices, including cell phones and tablets.&lt;/p&gt;
&lt;p&gt;In general, a Trojan comes attached to what looks like a legitimate program. In reality, it is a fake version of the app, loaded up with malware. Cybercriminals will usually place them on unofficial and pirate app markets for unsuspecting users to download.&lt;/p&gt;
&lt;p&gt;In addition, these apps can also steal information from your device, and generate revenue by sending premium SMS texts.&lt;/p&gt;
&lt;p&gt;One form of Trojan malware has targeted Android devices specifically, called &lt;strong&gt;Switcher Trojan&lt;/strong&gt;, it infects users’ devices to attack the routers on their wireless networks.
The result?
Cybercriminals could redirect traffic on the Wi-Fi-connected devices and use it to commit various crimes.&lt;/p&gt;
&lt;h2 id=&#34;how-to-help-protect-against-trojans-&#34;&gt;How To Help Protect Against Trojans ?&lt;/h2&gt;
&lt;h4 id=&#34;here-are-some-dos-and-donts-to-help-protect-against-trojan-malware&#34;&gt;Here are some DOs and DON&#39;Ts to help protect against Trojan malware.&lt;/h4&gt;
&lt;h4 id=&#34;first-the-dos-&#34;&gt;First, the DOs :&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Computer security begins with installing and running an internet security suite. Run periodic diagnostic scans with your software. You can set it up so the program runs scans automatically during regular intervals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Update your operating system’s software as soon as updates are made available from the software company. Cybercriminals tend to exploit security holes in outdated software programs. In addition to operating system updates, you should also check for updates on other software that you use on your computer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Protect your accounts with complex, unique passwords. Create a unique password for each account using a complex combination of letters, numbers, and symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Keep your personal information safe with firewalls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Back up your files regularly. If a Trojan infects your computer, this will help you to restore your data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Be careful with email attachments. To help stay safe, scan an email attachment first. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; A lot of things you should do come with a corresponding thing not to do — like, do be careful with email attachments and don’t click on suspicious email attachments.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;here-are-some-donts&#34;&gt;Here are some don’ts:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Don’t visit unsafe websites. Some internet security software will alert you that you’re about to visit an unsafe site, such as Norton Safe Web.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Don’t open a link in an email unless you’re confident it comes from a legitimate source. In general, avoid opening unsolicited emails from senders you don’t know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Don’t download or install programs if you don’t have complete trust in the publisher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Don’t click on pop-up windows that promise free programs that perform useful tasks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Don’t ever open a link in an email unless you know exactly what it is.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Hacking, Social Engineering and Types of Hackers</title>
      <link>https://thetechnohack.cf/post/hacking-social-engineer-and-types-of-hackers/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/hacking-social-engineer-and-types-of-hackers/</guid>
      <description>
        
          &lt;h2 id=&#34;what-is-hacking-&#34;&gt;What is Hacking ?&lt;/h2&gt;
&lt;p&gt;Hacking refers to activities that seek to compromise digital devices, such as computers, smartphones, tablets, and even entire networks. And while hacking might not always be for malicious purposes, nowadays most references to hacking, and hackers, characterize it/them as unlawful activity by cybercriminals—motivated by financial gain, protest, information gathering (spying), and even just for the “fun” of the challenge.&lt;/p&gt;
&lt;h2 id=&#34;what-is-social-engineering&#34;&gt;What is Social Engineering?&lt;/h2&gt;
&lt;p&gt;Hacking is typically technical in nature (like creating malvertising that deposits malware in a drive-by attack requiring no user interaction). But hackers can also use psychology to trick the user into clicking on a malicious attachment or providing personal data. These tactics are referred to as “social engineering.”&lt;/p&gt;
&lt;h2 id=&#34;different-type-of-hackershackings&#34;&gt;Different Type of Hackers/Hackings&lt;/h2&gt;
&lt;h4 id=&#34;1-inswhite-hat-hackerins&#34;&gt;1. &lt;ins&gt;White Hat Hacker&lt;/ins&gt;&lt;/h4&gt;
&lt;p&gt;First up, we have the perfect type of hacker to break the stereotype. The white hat hacker is a good guy, as ironic as it may sound. White Hackers, white hat hackers or ethical hackers are the people who test existing internet infrastructures to research loopholes in the system. They create algorithms and perform multiple methodologies to break into systems, only to strengthen them.&lt;/p&gt;
&lt;p&gt;Think of this as a lockpick, who would work his way around locks, only to inform the owners of how to make the locks work better.&lt;/p&gt;
&lt;p&gt;Famous white hat hackers have historically been pivotal in ensuring that large corporations maintain a strong network framework so that it is unbreakable against all other types of hacking. From being employees of the Government to being private consultants, white hackers help internet be a better and safer place.&lt;/p&gt;
&lt;h4 id=&#34;2-insblack-hat-hackerins&#34;&gt;2. &lt;ins&gt;Black Hat Hacker&lt;/ins&gt;&lt;/h4&gt;
&lt;p&gt;Simply put, these are the bad guys. Black hat hackers are responsible for all that is wrong with hacking. These guys break into systems purely with negative intentions. From stealing credit card information, to altering public databases, a black hat hacker looks to gain fame or monetary benefits from exploiting the loopholes in internet frameworks. Famous black hat hackers have notoriously robbed banks and financial institutions of millions of dollars, and invaluable private data.&lt;/p&gt;
&lt;h4 id=&#34;3-insgrey-hat-hackerins&#34;&gt;3. &lt;ins&gt;Grey Hat Hacker&lt;/ins&gt;&lt;/h4&gt;
&lt;p&gt;A grey hat hacker usually has mixed intentions. As the color code implies, this hacker type does not have the good intentions of a white hat hacker, nor does he have the ill intentions of a black hacker. A grey hat would break into systems but never for his own benefit. Famous grey hat hackers have exploited systems only to make the information public, and to bring to limelight vast datasets of information that contains wrongdoings.&lt;/p&gt;
&lt;br&gt;
&lt;style&gt;
img[src$=&#34;#image&#34;] {
  border-radius: 10px;
}
&lt;/style&gt;

        
      </description>
    </item>
    
    <item>
      <title>The Best Book to Learn Python — Free Download</title>
      <link>https://thetechnohack.cf/post/the-best-book-to-learn-python-from-basics/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/the-best-book-to-learn-python-from-basics/</guid>
      <description>
        
          &lt;h2 id=&#34;python-crash-course-2nd-edition&#34;&gt;Python Crash Course, 2nd Edition&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;According to No Starch Press :&lt;/strong&gt;
Python Crash Course is the world’s best-selling guide to the Python programming language. This fast-paced, thorough introduction to programming with Python will have you writing programs, solving problems, and making things that work in no time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTFzaiTDGEPSh0FWZekc_ptqCgGT_UuccIfFA&amp;amp;usqp=CAU&#34; alt=&#34;Python Crash Course Book&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Book :&lt;/strong&gt; Python Crash Course, 2nd Edition&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author :&lt;/strong&gt; Eric Matthes&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pages :&lt;/strong&gt;  544&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Year :&lt;/strong&gt; May 2019&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;File format :&lt;/strong&gt; PDF&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;File size :&lt;/strong&gt;  6.7 MB&lt;/p&gt;
&lt;h2 id=&#34;download&#34;&gt;Download&lt;/h2&gt;
&lt;h4 id=&#34;1st-edition&#34;&gt;1st Edition&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sumit-buddy/books/raw/main/python_crash_course_1st_edition.pdf&#34;&gt;Python Crash Course,1st Edition&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;2nd-edition&#34;&gt;2nd Edition&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sumit-buddy/books/raw/main/python_crash_course_2nd_edition.pdf&#34;&gt;Python Crash Course, 2nd Edition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://t.me/ComputerBuddy/70&#34;&gt;Python Crash Course, 2nd Edition (telegram)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the first half of the book, you’ll learn basic programming concepts, such as variables, lists, classes, and loops, and practice writing clean code with exercises for each topic. You’ll also learn how to make your programs interactive and test your code safely before adding it to a project. In the second half, you’ll put your new knowledge into practice with three substantial projects: a Space Invaders–inspired arcade game, a set of data visualizations with Python’s handy libraries, and a simple web app you can deploy online.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;As you work through the book, you’ll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use powerful Python libraries and tools, including Pygame, Matplotlib, Plotly, and Django&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make 2D games that respond to keypresses and mouse clicks, and that increase in difficulty&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use data to generate interactive visualizations
Create and customize web apps and deploy them safely online&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deal with mistakes and errors so you can solve your own programming problems&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;

        
      </description>
    </item>
    
    <item>
      <title>Brutespray – Port Scanning and Automated Brute Forcing Tool</title>
      <link>https://thetechnohack.cf/post/brutespray-port-scanning-and-automated-bruteforcing-tool/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/brutespray-port-scanning-and-automated-bruteforcing-tool/</guid>
      <description>
        
          &lt;h1 id=&#34;brutespray&#34;&gt;BruteSpray&lt;/h1&gt;
&lt;p&gt;BruteSpray is an open source python tool which provides a combination of both port scanning and automated brute force attacks against scanned services.&lt;/p&gt;
&lt;p&gt;It takes the &lt;strong&gt;GNMAP/XML&lt;/strong&gt; output from an nmap scan and automatically brute forces the services running with default credentials using Medusa or use your dictionary to gain access.&lt;/p&gt;
&lt;h1 id=&#34;github-stats&#34;&gt;GitHub Stats&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/x90skysn3k/brutespray&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=x90skysn3k&amp;amp;repo=brutespray&#34; alt=&#34;GitHub Status Card&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;installing-brutespray&#34;&gt;Installing BruteSpray&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Download the &lt;code&gt;.zip&lt;/code&gt; file from GitHub and install it manually.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Run the following command to install &lt;code&gt;brutespray&lt;/code&gt; package on Kali:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;apt install brutespray
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following screenshot shows the output of the preceding command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603125/brutespray/brutespray_installation_d3zpb7.png&#34; alt=&#34;Installing brutespray&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once it is installed, we can run the tool with the -h flag to view the list of all features and help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following screenshot shows the output of the preceding command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603445/brutespray/brutespray_help_c4j0ey.jpg&#34; alt=&#34;BruteSpray help menu&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;how-to-do-it&#34;&gt;How to do it...&lt;/h1&gt;
&lt;p&gt;We are doing this in 2 steps :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Scanning Target&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Brute Forcing Targeted Services&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scanning-target-&#34;&gt;Scanning Target :&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;First of all we need a target device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Here I&#39;m using my own virtual machine as a target (IP: 192.168.1.5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;So, let&#39;s scan this target using nmap to find out which services are currently running.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;nmap 192.168.1.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the following screenshot you can see running services of the victims machine:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603445/brutespray/nmap-services_xgqiw6.jpg&#34; alt=&#34;nmap scanning&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now we need to save this nmap output as an &lt;ins&gt;XML or GNMAP&lt;/ins&gt; file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;We are saving the nmap output as an XML file on our desktop using the following command:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;nmap 192.168.1.5 -oX /root/Desktop/scan.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see how this command looks alike:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603444/brutespray/nmap-scan_iu3vag.jpg&#34; alt=&#34;Saving scan output as xml file&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now we can see that there is a file created on our desktop as &lt;strong&gt;scan.xml&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;brute-forcing-targeted-services-&#34;&gt;Brute Forcing Targeted Services :&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;To run a default brute force on all of the services that were discovered by a previously run nmap scan, we can use the following command:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray --file scan.xml --threads &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The preceding command looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603222/brutespray/brutespray_command_e7xzts.png&#34; alt=&#34;Bruteforcing using scanned output&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To run the tool on one particular service, we can use the -s flag and
define the service we want to perform a brute force attack on. In the
following example, we will use the nmap scan that was done on a host
and only check the default credentials on the FTP service:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray --file scan.xml -t &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; -s ftp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following screenshot shows the output of the preceding
command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603445/brutespray/scanning_ftp_mgmjkn.jpg&#34; alt=&#34;Bruteforcing specific services&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the screenshot, we can see that the FTP allows anonymous
login, which is why the tool gave a success output for the credentials that
were shown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also use your custom user and password list to brute force.
For that you have to use -U and -P flags.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray --file scan.xml -U username.txt -P passwords.txt -t &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; -s ftp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;tutorial-video&#34;&gt;Tutorial video&lt;/h1&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/C-CVLbSEe_g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Practice and experiment on this tool on your own because the best ways to learn anything efficiently are – practicing and experimenting. &lt;br&gt;
If you are learning python take a deep dive and explore how this tool actually works.&lt;/p&gt;
&lt;br&gt;

        
      </description>
    </item>
    
    <item>
      <title>How to Install MySQL (MariaDB) on Android With Termux</title>
      <link>https://thetechnohack.cf/post/how-to-install-mysql-on-android-with-termux/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/how-to-install-mysql-on-android-with-termux/</guid>
      <description>
        
          &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Generally, smartphones are not for programming but with the rapid evolution of technology the capability of smartphone is also increasing. We can do many programming stuffs on smartphone using some applications.&lt;/p&gt;
&lt;p&gt;In this blog, we are going to use a database management system in our smartphone using termux.&lt;/p&gt;
&lt;p&gt;We cannot run Mysql effeciently on smartphone but alternatively we can use MariaDB as our database management system.
Mysql and mariadb have some similarities and differences.&lt;/p&gt;
&lt;p&gt;MariaDB is an open-source database management system, commonly used as an alternative for the MySQL in the LAMP (Linux, Apache, MySQL, PHP/Python/Perl) stack. It is intended to be a drop-in replacement for MySQL.&lt;/p&gt;
&lt;p&gt;This tutorial will explain how to install SQL(MariaDB) or MySQL command line Android.&lt;/p&gt;
&lt;p&gt;This is a very beginner friendly guide with explanary images.&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install Termux app (&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.termux&#34;&gt;CLICK HERE&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Internet connection&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;insstep1ins-updating-packages&#34;&gt;&lt;ins&gt;Step–1&lt;/ins&gt; Updating packages&lt;/h2&gt;
&lt;p&gt;Okay, so you have installed termux, what next?&lt;/p&gt;
&lt;p&gt;Launch termux and this is how termux looks like :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612006811/termux-mariadb/termux-home_amfpn1.jpg#image&#34; alt=&#34;termux-home-screen&#34;&gt;&lt;/p&gt;
&lt;p&gt;First thing you need to do is to allow termux to use device disk storage. To do that run the following command and press allow :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;termux-setup-storage
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we need to update its initial packages with the following apt command :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;apt update &amp;amp;&amp;amp; apt upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In between the updating process if it asks for storage permission or some other permission—just press &lt;em&gt;Y&lt;/em&gt; or simply press enter to use defaults.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can clear the cluttery screen using &lt;code&gt;clear&lt;/code&gt; command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insstep2ins-installing-mariadb-mysql&#34;&gt;&lt;ins&gt;Step–2&lt;/ins&gt; Installing MariaDB (MySQL)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Run the following command to install mariadb package :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;pkg install mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612008282/termux-mariadb/install-mariadb_j0bps8.jpg#image&#34; alt=&#34;installing-mariadb-package&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type &lt;em&gt;Y&lt;/em&gt; and press enter to give storage permission :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612008593/termux-mariadb/termux-image-2_qhkags.jpg#image&#34; alt=&#34;giving-storage-permission&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wait until the process completes.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insstep3ins-runningstopping-mariadb-sessions&#34;&gt;&lt;ins&gt;Step–3&lt;/ins&gt; Running/Stopping MariaDB sessions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You have to use this step every time you need to run MariaDB.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Run the following command to start mariadb daemon :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mysqld_safe -u $(whoami)@localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;After that your screen will look like this, which means mariadb daemon started successfully :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612011419/termux-mariadb/mariadb-start-cmd-2_gz3fhw.jpg#image&#34; alt=&#34;starting-mariadb-daemon&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Then, press &lt;code&gt;ctrl+z&lt;/code&gt; or &lt;ins&gt;open a new session&lt;/ins&gt; (it means the process will run in background)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then, run &lt;code&gt;mariadb&lt;/code&gt; or &lt;code&gt;mysql&lt;/code&gt; command to start mariadb-cli :&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612012273/termux-mariadb/mariadb-home_rigrwh.jpg#image&#34; alt=&#34;mariadb-home-screen&#34;&gt;&lt;/p&gt;
&lt;p&gt;After running mariadb-cli, do whatever you want — create databases, tables or connect it with python for your projects.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To exit mariadb, type &lt;em&gt;exit&lt;/em&gt; or &lt;em&gt;quit&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After exiting MariaDB dont forget to kill the background process completely using the below command (you can also kill sessions using pid&#39;s) :&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;killall -u $(whoami)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Update packages using the below command :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;apt update &amp;amp;&amp;amp; apt upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Install mariadb package using :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;pkg install mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Start mariadb daemon using :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mysqld_safe -u $(whoami)@localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Run mariadb using :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Exit mariadb and then kill all background processes (daemons) using :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;killall -u $(whoami)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;do-it-using-aliases&#34;&gt;Do it using aliases&lt;/h2&gt;
&lt;p&gt;Optionally, you can also define aliases for above commands in &lt;em&gt;bash.bashrc&lt;/em&gt; file like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mysqld_safe -u $(whoami)@localhost &amp;amp;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;killall -u $(whoami)&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You don&#39;t need to write those long commands every time after using aliases. You just need to type &lt;ins&gt;run, mysql &amp;amp; stop&lt;/ins&gt; commands instead.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this guide you installed MariaDB to act as an SQL server in android. Optionally, you also created a separate password-authenticated administrative user.&lt;/p&gt;
&lt;br&gt;
&lt;style&gt;
img[src$=&#34;#image&#34;] {
  border-radius: 10px;
}
&lt;/style&gt;

        
      </description>
    </item>
    
    <item>
      <title>What is Google Cloud Shell?</title>
      <link>https://thetechnohack.cf/post/what-is-google-cloud-shell/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/what-is-google-cloud-shell/</guid>
      <description>
        
          &lt;p&gt;If you always hesitate to install different software packages on your local system — this blog is for you.&lt;/p&gt;
&lt;p&gt;Yes, the best solution to this problem is a cloud based environment.&lt;/p&gt;
&lt;p&gt;The cloud computing market is pretty huge but we are going to talk about &lt;strong&gt;Google Cloud Platform(GCP)&lt;/strong&gt;, more specifically about Google Cloud Shell.&lt;/p&gt;
&lt;p&gt;GCP is a very big deal that&#39;s why we are just focusing on cloud shell for now.&lt;/p&gt;
&lt;h2 id=&#34;what-is-google-cloud-shell-&#34;&gt;What is Google Cloud Shell ?&lt;/h2&gt;
&lt;p&gt;Cloud Shell is an online development environment based on Google Cloud Platform (GCP).&lt;/p&gt;
&lt;p&gt;It runs on a Debian-Based virtual machine, that can be accessed with any browser, it makes it easy to manage your projects and resources without having to install them on your local system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Basic features of google cloud shell are completely free for any user with a Google account.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;cloud-shell-console&#34;&gt;Cloud Shell Console&lt;/h2&gt;
&lt;p&gt;Cloud Shell provides you a console with two main utilities:&lt;/p&gt;
&lt;h3 id=&#34;1-cloud-shell-terminal&#34;&gt;1. Cloud Shell Terminal&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/bADt-LplQDbOD3LLXc8nB4zC5GUjV0MCieIWXOUd7j7gaHL2uDuPuZt3kYdl_KoclG4OHTQp26k=e14-w3004&#34; alt=&#34;terminal preview&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cloud Shell Terminal is a linux-based command-line tool for accessing your VM instances.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It supports multiple terminal sessions and full &lt;strong&gt;tmux&lt;/strong&gt; support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It comes with tonnes of pre-installed tool &amp;amp; google cloud sdk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have full root privileges on your allocated VM and can even run sudo commands, if you need to.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;TIP&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;em&gt;You can also access the terminal form GCP mobile app(no billing needed)&lt;/em&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span class=&#34;nowrap&#34;&gt;&lt;span class=&#34;emojify&#34;&gt;👇&lt;/span&gt;&lt;br&gt;
&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.apps.cloudconsole&#34;&gt;Download from playstore&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-cloud-shell-editor&#34;&gt;2. Cloud Shell Editor&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/WhS3gyjmk-B3XGdOYtPsnCN6XWkbJPNk4WiTm6wF2RjjANdXcmKjzsPf6WPnvIYlWP_emz55lMYB=e14-w3004&#34; alt=&#34;editor preview&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cloud Shell Editor has a GUI environment where you can develop, build, debug &amp;amp; deploy your apps and projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It also supports some useful vscode extensions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It has an built-in git client. You can easily preview and commit to your repo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;h4 id=&#34;online-development&#34;&gt;Online development&lt;/h4&gt;
&lt;p&gt;Access Cloud Console from any web browser. No need to do anything locally.&lt;/p&gt;
&lt;h4 id=&#34;free-storage&#34;&gt;Free storage&lt;/h4&gt;
&lt;p&gt;It comes with free 5GB of persistent storage as &lt;code&gt;$HOME&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4 id=&#34;pre-installed-tools&#34;&gt;Pre-installed tools&lt;/h4&gt;
&lt;p&gt;It comes with many pre-installed tools such as python, java, mysql, nano, vim, emacs, gcloud SDK etc.&lt;/p&gt;
&lt;h4 id=&#34;up-to-date&#34;&gt;Up-to-date&lt;/h4&gt;
&lt;p&gt;All the pre-installed tools always stay up-to-date.&lt;/p&gt;
&lt;h4 id=&#34;built-in-git-client&#34;&gt;Built-in git client&lt;/h4&gt;
&lt;p&gt;Cloud Shell Editor has a built-in git client. You can manage your repository and project easily.&lt;/p&gt;
&lt;h2 id=&#34;limitations--restrictions&#34;&gt;Limitations &amp;amp; restrictions&lt;/h2&gt;
&lt;h4 id=&#34;custom-packages&#34;&gt;Custom packages&lt;/h4&gt;
&lt;p&gt;You can only install custom packages in &lt;code&gt;$HOME&lt;/code&gt; directory. All the packages outside &lt;code&gt;$HOME&lt;/code&gt; directory will lost after an hour of inactivity.&lt;/p&gt;
&lt;h4 id=&#34;vs-code-extensions&#34;&gt;VS code extensions&lt;/h4&gt;
&lt;p&gt;You can not install any additional vs code extension on cloud shell editor but it comes with all essential extensions.&lt;/p&gt;
&lt;h4 id=&#34;private-browsing--disabled-third-party-cookies&#34;&gt;Private browsing &amp;amp; disabled third-party cookies&lt;/h4&gt;
&lt;p&gt;You can not use cloud console if you are using private browser or third-party cookies are disabled in your browser&lt;/p&gt;
&lt;h4 id=&#34;coin-mining--network-scanning&#34;&gt;Coin mining &amp;amp; network scanning&lt;/h4&gt;
&lt;p&gt;Coin mining and network scanning using Cloud Shell are strictly prohibited. If you do such things your account may be disabled forever.&lt;/p&gt;
&lt;h4 id=&#34;weekly-usage-limit&#34;&gt;Weekly usage limit&lt;/h4&gt;
&lt;p&gt;Cloud Shell also has a weekly usage limit. If you reach your usage limit, you&#39;ll have to wait.&lt;/p&gt;
&lt;h4 id=&#34;cloud-shell-inactivity&#34;&gt;Cloud shell inactivity&lt;/h4&gt;
&lt;p&gt;If you do not access Cloud Shell for 120 days, your home disk will be deleted. You will be informed with email before resetting your &lt;code&gt;$HOME&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;I&#39;m also a new user of GCP and still struggling to learn its features.&lt;/p&gt;
&lt;br&gt;

        
      </description>
    </item>
    
    <item>
      <title>The History of &#39;Hello, world!&#39;</title>
      <link>https://thetechnohack.cf/post/hello-world/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/hello-world/</guid>
      <description>
        
          &lt;h2 id=&#34;hello-world&#34;&gt;Hello, world!&lt;/h2&gt;
&lt;p&gt;Traditionally, &#39;Hello, world!&#39; programs are used to illustrate how the process of coding works, as well as to ensure that a language or system is operating correctly.&lt;/p&gt;
&lt;p&gt;They are usually the first programs that new coders learn, because even those with little or no experience can execute &#39;Hello, world!&#39; both easily and correctly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&#39;Hello, world!&#39; is usually used as the first example for any programming language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &#39;Hello, world!&#39; program is used to check whether the codes are executing correctly or not.
If &#39;Hello, world!&#39; does not work effectively within the framework, then it is likely that other, more complex programs will also fail.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Hello_World_Brian_Kernighan_1978.jpg/220px-Hello_World_Brian_Kernighan_1978.jpg&#34; alt=&#34;&#39;Hello, World!&#39; program by Brian Kernighan (1978)&#34;&gt;&lt;/p&gt;
&lt;p&gt;Though the origins of Hello World remain somewhat unclear, the tradition of using the phrase &amp;quot;Hello, world!&amp;quot; as a test message was influenced by an example program in the seminal 1978 book &lt;a href=&#34;https://archive.org/details/TheCProgrammingLanguageFirstEdition/page/n143/mode/2up&#34;&gt;The C Programming Language&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The example program in that book prints &amp;quot;Hello, world!&amp;quot;, and was inherited from a 1974 Bell Laboratories internal memorandum by &lt;strong&gt;Brian Kernighan&lt;/strong&gt;, Programming in C: A Tutorial.&lt;/p&gt;
&lt;h2 id=&#34;hello-world--in-different-programming-languages&#34;&gt;&#39;Hello, world! &#39; in different programming languages&lt;/h2&gt;
&lt;p&gt;Here’s what the code for Hello World looks like in some of the most popular programming languages currently in use.&lt;/p&gt;
&lt;h3 id=&#34;python-3&#34;&gt;Python 3&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;java&#34;&gt;Java&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloWorld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;c&#34;&gt;C#&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Program&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ruby&#34;&gt;Ruby&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;puts&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;scala&#34;&gt;Scala&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloWorld&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;App&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the increasing complexity of modern coding languages, Hello World is more important than ever. Both as a test and a teaching tool, it has become a standardized way of allowing programmers to configure their environment.&lt;/p&gt;
&lt;p&gt;No one can be sure why Hello World has stood the test of time in an industry known for rapid-fire innovation, but it is here to stay.&lt;/p&gt;
&lt;p&gt;By the way, in which program language you have written your first &#39;Hello, world!&#39; program. Mine was &lt;code&gt;helloworld.py&lt;/code&gt;.&lt;/p&gt;
&lt;br&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
